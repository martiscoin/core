//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blockcore.Networks.X1.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Blockcore.Networks.X1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 /*
        /// * Developed by Claudio André &lt;claudioandre.br at gmail.com&gt; in 2012
        /// *
        /// * Copyright (c) 2012-2015 Claudio André &lt;claudioandre.br at gmail.com&gt;
        /// * This program comes with ABSOLUTELY NO WARRANTY; express or implied.
        /// *
        /// * This is free software, and you are welcome to redistribute it
        /// * under certain conditions; as expressed here
        /// * http://www.gnu.org/licenses/gpl-2.0.html
        /// */
        ///
        ///# ifndef OPENCL_DEVICE_INFO_H
        ///#define OPENCL_DEVICE_INFO_H
        ///
        /////Copied from opencl_common.h
        ///#define DEV_UNKNOWN       [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SpartacryptOpenCLMiner_opencl_device_info_h {
            get {
                return ResourceManager.GetString("SpartacryptOpenCLMiner.opencl_device_info.h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*
        /// * OpenCL common macros
        /// *
        /// * Copyright (c) 2014-2015, magnum
        /// * This software is hereby released to the general public under
        /// * the following terms: Redistribution and use in source and binary
        /// * forms, with or without modification, are permitted.
        /// *
        /// * NOTICE: After changes in headers, with nvidia driver you probably
        /// * need to drop cached kernels to ensure the changes take effect:
        /// *
        /// * rm -fr ~/.nv/ComputeCache
        /// *
        /// */
        ///
        ///#ifndef _OPENCL_MISC_H
        ///#define _OPENCL_MISC_H
        ///
        /////#include &quot;openc [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SpartacryptOpenCLMiner_opencl_misc_h {
            get {
                return ResourceManager.GetString("SpartacryptOpenCLMiner.opencl_misc.h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*
        /// * Developed by Claudio André &lt;claudioandre.br at gmail.com&gt; in 2012
        /// *
        /// * Copyright (c) 2012-2015 Claudio André &lt;claudioandre.br at gmail.com&gt;
        /// * This program comes with ABSOLUTELY NO WARRANTY; express or implied.
        /// *
        /// * This is free software, and you are welcome to redistribute it
        /// * under certain conditions; as expressed here
        /// * http://www.gnu.org/licenses/gpl-2.0.html
        /// */
        ///
        ///#ifndef OPENCL_SHA2_COMMON_H
        ///#define OPENCL_SHA2_COMMON_H
        ///
        /// // Type names definition.
        /// // NOTE: long is always 64-b [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SpartacryptOpenCLMiner_opencl_sha2_common_h {
            get {
                return ResourceManager.GetString("SpartacryptOpenCLMiner.opencl_sha2_common.h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /*
        /// * Developed by Claudio André &lt;claudioandre.br at gmail.com&gt; in 2012
        /// *
        /// * Copyright (c) 2012-2015 Claudio André &lt;claudioandre.br at gmail.com&gt;
        /// * This program comes with ABSOLUTELY NO WARRANTY; express or implied.
        /// *
        /// * This is free software, and you are welcome to redistribute it
        /// * under certain conditions; as expressed here
        /// * http://www.gnu.org/licenses/gpl-2.0.html
        /// */
        ///
        ///#ifndef OPENCL_SHA512_H
        ///#define OPENCL_SHA512_H
        ///
        /////#include &quot;opencl_sha2_common.h&quot;
        ///
        ///#define MIN_KEYS_PER_CRYPT     [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SpartacryptOpenCLMiner_opencl_sha512_h {
            get {
                return ResourceManager.GetString("SpartacryptOpenCLMiner.opencl_sha512.h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 // Functions and kernel for mining with sha512
        ///
        ///int compare_uint256(uint64_t* x, uint64_t* y)
        ///{
        ///#pragma unroll
        ///    for (int i = 3; i &gt;= 0; i--) {
        ///
        ///        uint32_t xh = x[i] &gt;&gt; 32;
        ///        uint32_t xl = x[i];
        ///
        ///        uint32_t yh = y[i] &gt;&gt; 32;
        ///        uint32_t yl = y[i];
        ///
        ///        if (xh &lt; yh)
        ///            return -1;
        ///        if (xh &gt; yh)
        ///            return 1;
        ///        if (xl &lt; yl)
        ///            return -1;
        ///        if (xl &gt; yl)
        ///            return 1;
        ///    }
        ///
        ///    return 0;
        ///}
        ///
        ///void pad_buffer [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string SpartacryptOpenCLMiner_sha512_miner_cl {
            get {
                return ResourceManager.GetString("SpartacryptOpenCLMiner.sha512_miner.cl", resourceCulture);
            }
        }
    }
}
