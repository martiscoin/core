@using Blockcore.Interfaces.UI;
@using Blockcore.Networks

@inject Network Network
@inject IFullNode fullnode
@inject NavigationManager NavigationManager

<div class="top-row pl-4 navbar navbar-dark">

    <a class="navbar-brand" href="/">
        <img src="data:image/png;base64,@this.Network.FavoriteIcon()" alt="Logo" style="width:30px;">
       Ouranos Wallet
    </a>

    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

@{
    var items = fullnode.NodeService<IEnumerable<INavigationItem>>();
}

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <a class="nav-link  @setActive("Home") " style="cursor:pointer;" @onclick="() => { NavigateToHome(); }" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </a>
        </li>
        @{
            var index = 0;
            foreach (var item in items.OrderBy(i => i.NavOrder))
            {
                if (item.IsVisible)
                {
                    index++;
                    <li class="nav-item px-3">
                        <a class="nav-link @setActive(item.Navigation)" style="cursor:pointer;" @onclick="() => { NavigateToPage(item.Navigation); }">
                            <span class="oi @item.Icon" aria-hidden="true"></span> @item.Name
                            @* icon reference >> https://iconify.design/icon-sets/oi/ *@
                        </a>
                    </li>
                }
            }

            <li class="nav-item px-3" style="cursor:pointer;">
                <a class="nav-link @setActive("About")" Match="NavLinkMatch.All" @onclick="() => { NavigateToAbout(); }">
                    <span class="oi oi-info" aria-hidden="true"></span> About
                </a>
            </li>
        }
    </ul>
</div>

@code {
    string activeNav="Home";
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    string setActive(string name)
    {
        if (activeNav.Equals(name))
        {
            return "active";
        }
        return "";
    }

    void NavigateToAbout()
    {
        NavigateToPage("About");
    }

    void NavigateToHome()
    {
        NavigateToPage("");
    }

    private void NavigateToPage(string name)
    {
        activeNav = name == "" ? "Home" : name;
        NavigationManager.NavigateTo(name);
    }
}